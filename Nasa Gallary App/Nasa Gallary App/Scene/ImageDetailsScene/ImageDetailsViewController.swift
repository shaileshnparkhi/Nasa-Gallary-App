//
//  ImageDetailsViewController.swift
//  Nasa Gallary App
//
//  Created by ADMIN on 01/09/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol ImageDetailsDisplayLogic: class
{
 
}

class ImageDetailsViewController: UIViewController, ImageDetailsDisplayLogic
{
  var interactor: ImageDetailsBusinessLogic?
  var router: (NSObjectProtocol & ImageDetailsRoutingLogic & ImageDetailsDataPassing)?

    @IBOutlet weak var titleLabel:UILabel!
    
    @IBOutlet weak var descriptionLabel:UILabel!
    
    @IBOutlet weak var copyWriteLabel:UILabel!
    @IBOutlet weak var imageView:UIImageView!
    
    @IBOutlet var swipeOnView: UISwipeGestureRecognizer!
    
    @IBOutlet weak var pageControl: UIPageControl!
    
    @IBOutlet weak var dateLabel: UILabel!
    
    
    var currPageIndex = 0
    
    
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
      
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ImageDetailsInteractor()
    let presenter = ImageDetailsPresenter()
    let router = ImageDetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      
      let leftSwipe = UISwipeGestureRecognizer(target: self, action: #selector(handleSwipes(_:)))
      let rightSwipe = UISwipeGestureRecognizer(target: self, action: #selector(handleSwipes(_:)))
     
      
      leftSwipe.direction = .left
      rightSwipe.direction = .right

      view.addGestureRecognizer(leftSwipe)
      view.addGestureRecognizer(rightSwipe)
      
      currPageIndex = self.router?.dataStore?.selectedImageModelIndex ?? 0
      
      self.updateScreenDetails()
      
      self.pageControl.numberOfPages = self.router?.dataStore?.imageDataArray?.count ?? 0
      self.pageControl.pageIndicatorTintColor = .red
      self.pageControl.currentPageIndicatorTintColor = .blue
  }
    
    
    @objc func handleSwipes(_ sender:UISwipeGestureRecognizer) {
            
        if (sender.direction == .left) {
                print("Swipe Left")
            if(currPageIndex < (self.router?.dataStore?.imageDataArray?.count ?? 0) - 1) {
                currPageIndex += 1
                self.updateScreenDetails()
            }
        }else if (sender.direction == .right) {
            print("Swipe Right")
            if(currPageIndex > 0) {
                currPageIndex -= 1
                self.updateScreenDetails()
                
            }
        }
        pageControl.currentPage = currPageIndex
    }
    
    func updateScreenDetails() {
        self.titleLabel.text = self.router?.dataStore?.imageDataArray?[currPageIndex].title
        self.descriptionLabel.text = self.router?.dataStore?.imageDataArray?[currPageIndex].explanation
        self.copyWriteLabel.text = self.router?.dataStore?.imageDataArray?[currPageIndex].copyright?.count ?? 0 > 0 ? self.router?.dataStore?.imageDataArray?[currPageIndex].copyright : "Not Available"
        self.dateLabel.text = self.router?.dataStore?.imageDataArray?[currPageIndex].captured_date
        if let urlString = self.router?.dataStore?.imageDataArray?[currPageIndex].hdurl as? String, let url = URL(string: urlString) as? URL{
            self.imageView.kf.indicatorType = .activity
            self.imageView.kf.setImage(with: url, placeholder: UIImage(named: "placeholder"), options: [
                .scaleFactor(UIScreen.main.scale),
                .transition(.fade(1)),
                .cacheOriginalImage
            ], progressBlock: nil)
        }
    }
 
}
